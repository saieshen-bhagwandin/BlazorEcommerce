@page "/cart"
@inject ICartService CartService
@inject IOrderService orderService
@inject ISyncLocalStorageService Localstorage
@inject IToastService ToastService

@if (!orderPlaced)
{
    <h3>Shopping Cart</h3>

    @if (cartItems == null || cartItems.Count <= 0)
    {
        <span>You have no items in your cart.</span>
    }
    else
    {
        <div>
            @foreach (var item in cartItems)
            {
                <div class="item-container">
                    <div class="item-image-wrapper"><img src="@item.Image" class="item-image" /></div>
                    <div class="item-name">
                        <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                        <span>@item.EditionName</span><br />
                       <button class="btn-delete" @onclick="@(() => DeleteItem(item))">Delete</button>
                        <EditForm Model="item">
                            <InputNumber id="quantity"  Min="1" @bind-Value="item.Quantity"
                                         class="form-control" style="width: 70px" />
                        </EditForm>
                    </div>
                    <div class="item-price">R @(item.Price * item.Quantity)</div>
                </div>
            }
            <div class="item-price">
                Total (@cartItems.Count): R @cartItems.Sum(item => item.Price * item.Quantity)
            </div>
            <div style="text-align: center; margin-top: 10px;">
                <button class="btn btn-primary btn-lg" @onclick="PlaceOrder">Place Order</button>
            </div>
        </div>
        
    }

    }
else
{
    <h3>Thank you for your order!</h3>
    <h4>Here's what you'll get:</h4>
    <div>
        @foreach (var item in cartItems)
        {
            <div class="item-container">
                <div class="item-image-wrapper"><img src="@item.Image" class="item-image" /></div>
                <div class="item-name">
                    <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                    <span>@item.EditionName</span><br />
                </div>
                <div class="item-price">R @(item.Price * item.Quantity)</div>
            </div>
        }
        <div class="item-price">
            Total (@cartItems.Count): R @cartItems.Sum(item => item.Price * item.Quantity)
        </div>
    </div>
}




@code {
    List<CartItem> cartItems = new List<CartItem>();
    bool orderPlaced = false;


    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }

    private async Task PlaceOrder()
    {
        orderPlaced = true;

        var user = Localstorage.GetItem<UserRegisterRequest>("userinfo");

        EmailDTO emaildto = new EmailDTO();

        user.Password = "testing";
        user.ConfirmPassword = "testing";

        emaildto.user = user;

        emaildto.cartItem = cartItems;

        var result = await orderService.AddOrderAsync(emaildto);

        if (result == "order was placed")
        {

            await CartService.purchaseAsync(emaildto);

            await CartService.EmptyCart();

             ToastService.ShowSuccess("Email has been sent to confirm order", "Purchase Success");

        }else{
        
        ToastService.ShowError(result, "Purchase failed");
        
        }

    }

}
