@page "/product/{id:int}"
@inject IProductService ProductService 
@inject ILocalStorageService LocalstorageService
@inject IToastService ToastService
@inject ICartService CartService
@inject ICategoryService categoryservice

@if (product == null)
{
    <center><img class="rotate" src="Images/loading.png" alt="failed" /></center>


}else{

<h3>Category : @getcategory(product.CategoryId) </h3><br /><br /><br />

    <div class="media">
    <div class="media-img-big-wrapper mr-2">
        <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
    </div> 
    <div class="media-body">
        <h2 class="mb-0">@product.Title</h2> <br>
        <p>@product.Description</p>
        
        @if (product.Variants != null && product.Variants.Count > 0)
        {
            <div class="form-group">
                <select class="form-control" @bind="currentEditionId">
                    @foreach (var variant in product.Variants)
                    {
                        <option value="@variant.Edition.Id" >@variant.Edition.Name</option>
                    }
                </select>
            </div>
        }
       <br>


   @if (GetSelectedVariant() != null)
        {
            @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
            {
                <h6 class="original-price">R @(GetSelectedVariant().OriginalPrice * cartItem.Quantity)</h6>
            }
            <h4 class="price">
                R @(GetSelectedVariant().Price * cartItem.Quantity) 
            </h4> <br>
        }
          
             <EditForm Model="cartItem">
               <div class="form-group">
                <InputNumber id="quantity" @bind-Value="cartItem.Quantity"  Min="1"  class="form-control" style="width: 70px;" />
                </div>
              </EditForm> <br>
               <AuthorizeView>
                 <Authorized>
              <button class="btn btn-primary" @onclick="AddToCart" ><i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart</button>
            </Authorized>
        </AuthorizeView>
    </div>

</div>

}


@code {
    private Product product = new Product();
    private string message = string.Empty;

    private int currentEditionId = 1;

    private CartItem cartItem = new CartItem { Quantity = 1 };

    [Parameter]
    public int Id {get;set;}


    protected override async Task OnInitializedAsync()
    {
        await categoryservice.GetCategories();
    }

    protected override async Task OnParametersSetAsync() {

        var result = await ProductService.GetProductByIdAsync(Id);

        if(result.Data!=null)
            product = result.Data;

        if (product.Variants.Count > 0) {

            currentEditionId = product.Variants[0].EditionId;

        }

    }


    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.EditionId == currentEditionId);
        return variant;
    }



    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();

        cartItem.EditionId = productVariant.EditionId;
        cartItem.EditionName = productVariant.Edition.Name;
        cartItem.Image = product.ImageUrl;
        cartItem.Price = productVariant.Price;
        cartItem.ProductId = productVariant.ProductId;
        cartItem.ProductTitle = product.Title;

        await CartService.AddToCart(cartItem);

    }



    public string getcategory(int id) { 


        foreach (var item in categoryservice.Categories)
        {

            if (item.Id == id) {


                return item.Name;

            }

        }


        return "None";

    
    }







}
