@inject IProductService productService

@if (productService.Products == null || productService.Products.Count == 0)
{
    
    <span> Loading Products...</span>

}else{


<ul class="list-unstyled" >

   @foreach (var product in productService.Products)
   {
       <li class="media my-3">

           <div class="media-img-wrapper mr-2">
               <a href="/product/@product.Id">
               <img class="media-img" src="@product.ImageUrl" title="@product.Title">
               </a>
           </div>
           <div class="media-body">
               <a href="/product/@product.Id">

                   <h4 class="mb-0"> @product.Title</h4>

               </a><br>

               <p> @product.Description</p><br>
                <p> Quantity : @product.Quantity</p><br>


               <h5 class="price"> 
                   
                   R @product.Price 


               </h5>
           </div>

       </li>
   }



</ul>

}


@code {

    private static List<Product> Products = new List<Product>{ };

    protected override async Task OnInitializedAsync()
    {


        await productService.GetProducts();

    }





}
