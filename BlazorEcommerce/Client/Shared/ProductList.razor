@inject IProductService productService
@implements IDisposable

@if (productService.Products == null || productService.Products.Count == 0)
{
    
    <span> Loading Products...</span>

}else{


<ul class="list-unstyled" >

   @foreach (var product in productService.Products)
   {
                   <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/product/@product.Id">
                       
                            <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
                      
                    
                    </a>
                </div>
                <div class="media-body">
                    <a href="/product/@product.Id">
                        <h4 class="mb-0">@product.Title</h4><br>
                    </a>
                    <p>@product.Description</p>
               
                </div>
            </li>
   }



</ul>

}


@code {

    private static List<Product> Products = new List<Product>{ };

    protected override void OnInitialized()
    {


        productService.ProductsChanged += StateHasChanged;

    }


    public void Dispose() { 
    
    productService.ProductsChanged -= StateHasChanged;
    
    }


}
